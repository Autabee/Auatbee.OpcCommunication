name: Main push

on:
  push:
    branches: [ main ]
env:
  DOTNET_NOLOGO: true                     
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true 
  DOTNET_CLI_TELEMETRY_OPTOUT: true  
  TF_BUILD: true   
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
      - name: restore workloads
        run: dotnet workload install maui-windows --ignore-failed-sources
      - name: Restore dependencies
        run: dotnet restore ./src
      - name: Build
        run: dotnet build ./src --configuration Release --no-restore
      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal ./src
      # - uses: actions/upload-artifact@master
      #   with:
      #     name: src-artifacts
      #     path: src

      # publish-packages:
      #   needs:
      #     - build
      #   runs-on: windows-latest
      #   steps:
      #   - uses: actions/download-artifact@master
      #     with:
      #       name: src-artifacts
      #       path: src
      - name: Publish opc client to NuGet
        continue-on-error: true
        uses: alirezanet/publish-nuget@v3.0.4
        with:
            PROJECT_FILE_PATH: src/ManagedOpcClient/Autabee.Communication.ManagedOpcClient.csproj
            NUGET_KEY: ${{secrets.NUGET_KEY}}
            VERSION_FILE_PATH: src/ManagedOpcClient/Autabee.Communication.ManagedOpcClient.csproj
            INCLUDE_SYMBOLS: true
            NO_BUILD: true
      - name: Publish opc sharper to NuGet
        continue-on-error: true
        uses: alirezanet/publish-nuget@v3.0.4
        with:
            PROJECT_FILE_PATH: src/OpcSharper/Autabee.OpcSharper.csproj
            NUGET_KEY: ${{secrets.NUGET_KEY}}
            VERSION_FILE_PATH: src/OpcSharper/Autabee.OpcSharper.csproj
            INCLUDE_SYMBOLS: true
            NO_BUILD: true

      # push_to_registry:
      #   needs:
      #     - build
      #   name: Push Docker image to Docker Hub
      #   runs-on: windows-latest
      #   steps:      
      #     - uses: actions/download-artifact@master
      #       with:
      #         name: src-artifacts
      #         path: src
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: autabee/opcscout
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./src
          file: ./src/Autabee.OpcScoutWeb/Dockerfile
          push: true
          #tags: ${{ steps.meta.outputs.tags }} branch
          tags: autabee/opcscout:beta
          labels: ${{ steps.meta.outputs.labels }}
          
      # push_to_github:
      #   needs:
      #     - build
      #   name: Push release
      #   runs-on: windows-latest
      #   steps:
      #     - uses: actions/download-artifact@master
      #       with:
      #         name: src-artifacts
      #         path: src
      - name: zip 
        run: | 
          powershell Compress-Archive ./src/Autabee.OpcScoutApp/bin/Release/net6.0-windows10.0.19041.0win10-x64 ./opcscout-windowsx64-app.zip
          powershell Compress-Archive ./src/Autabee.OpcScoutWeb/bin/Release/net6.0 ./opcscout-web.zip
      - name: publish git
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.txt
            opcscout-windowsx64-app.zip
            opcscout-web.zip
